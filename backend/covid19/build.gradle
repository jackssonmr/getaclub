plugins {
    id 'org.springframework.boot' version '2.1.5.RELEASE'
    id 'java'
    id 'net.ltgt.apt' version '0.20'
    id "com.palantir.docker" version "0.20.1"
    //   id "io.freefair.lombok" version "3.2.0"
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.palantir.docker'

apply plugin: 'net.ltgt.apt-idea'
apply plugin: 'net.ltgt.apt-eclipse'
//apply plugin: "io.freefair.lombok"

group = 'com.getclub.covid19'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'


bootJar {
    baseName = 'getclub-covid19'
}

docker {
    dependsOn build
    name "${project.group}/${bootJar.baseName}"
    files bootJar.archivePath
    buildArgs(['JAR_FILE': "${bootJar.archiveName}"])
}

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    mavenLocal()
}

ext {
    set('springCloudVersion', 'Greenwich.SR1')
    mapstructVersion = "1.3.0.Final"
    lombokVersion = "1.18.6"
}

compileJava {
    options.compilerArgs = [
            '-Amapstruct.defaultComponentModel=spring',
            '-Amapstruct.suppressGeneratorTimestamp=true',
            '-Amapstruct.suppressGeneratorVersionInfoComment=true' //,
            //           'lombok.launch.AnnotationProcessorHider$AnnotationProcessor'
    ]
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-hateoas'
    implementation 'org.springframework.boot:spring-boot-starter-quartz'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.springframework.cloud:spring-cloud-starter-config'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    implementation 'org.springframework.cloud:spring-cloud-starter-sleuth'
    implementation 'org.springframework.cloud:spring-cloud-starter-zipkin'
    implementation 'org.springframework.kafka:spring-kafka'

    implementation ("io.springfox:springfox-swagger2:2.9.2") {
        exclude module: "mapstruct"
    }
    implementation "io.springfox:springfox-bean-validators:2.9.2"
    implementation "io.springfox:springfox-swagger-ui:2.9.2"

    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'mysql:mysql-connector-java'
    annotationProcessor 'org.projectlombok:lombok'

    // https://mvnrepository.com/artifact/com.jayway.jsonpath/json-path
    compile group: 'com.jayway.jsonpath', name: 'json-path', version: '2.4.0'

    implementation "org.mapstruct:mapstruct:${mapstructVersion}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
    // If you are using mapstruct in test code
    testAnnotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.kafka:spring-kafka-test'
    //TODO: Actualizar esta referencia
    testCompile('org.junit.jupiter:junit-jupiter:5.4.2')
    testImplementation('org.junit.jupiter:junit-jupiter:5.4.2')
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}
